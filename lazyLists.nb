Notebook[{
Cell[BoxData["Quit"], "Input",
 CellLabel->"In[98]:=",ExpressionUUID->"9144bd79-1271-4ef8-81e8-53730fe5da93"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$HistoryLength", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<lazyLists`\>\"", "]"}], ";"}]}], "Input",
 CellLabel->
  "In[365]:=",ExpressionUUID->"2d6a87cf-3ef1-4832-b8b9-0995d6d1b646"],

Cell[CellGroupData[{

Cell["Usage messages for lazy list constructors and other symbols", \
"Section",ExpressionUUID->"ec4cc4aa-b2ff-4f5e-9ddc-c3f207f96586"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "lazyList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyRange"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyPowerRange"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyNestList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyStream"}], "\[IndentingNewLine]", 
 RowBox[{"?", "lazyConstantArray"}]}], "Input",
 CellLabel->
  "In[368]:=",ExpressionUUID->"8f1d3194-9e73-46ae-83d7-5e7cad595285"],

Cell[CellGroupData[{

Cell[BoxData["\<\"lazyList is linked list data structure that should contain \
2 elements: the first is the first element, the second a held expression that \
will generate the next linked list when evaluated.\\nYou can extract these \
elements with First and Last. Part and Take will not work because they have \
been overloaded with special functionalities when used on lazyList\"\>"], \
"Print", "PrintUsage",
 CellTags->
  "Info3683746273559-7461869",ExpressionUUID->"af00d2f1-053b-431d-9a18-\
712cebe562ba"],

Cell[BoxData["\<\"lazyRange[] is a lazy representation of the Integers from 1 \
to \[Infinity]. lazyRange[min, delta] represents values values from min \
onwards in steps of delta. lazyRange has no upper limit\"\>"], "Print", \
"PrintUsage",
 CellTags->
  "Info3693746273559-7461869",ExpressionUUID->"aee9fadc-93b7-473e-92ab-\
42dcaf82bd92"],

Cell[BoxData["\<\"lazyPowerRange[min, r] is the infinite list {min, r \
\[Times] min, r^2 \[Times] min, ...}\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info3703746273559-7461869",ExpressionUUID->"5c1197dc-2390-41c0-9e2c-\
4bc17e67db0f"],

Cell[BoxData["\<\"lazyNestList[f, elem] is the infinite list {elem, f[elem], \
f[f[elem]], ...} starting with elem and generated by iterating f repeatedly\"\
\>"], "Print", "PrintUsage",
 CellTags->
  "Info3713746273560-7461869",ExpressionUUID->"bd553591-dbf9-4bdc-a564-\
f07b66851bc1"],

Cell[BoxData["\<\"lazyStream[streamObject] creates a lazyList that streams \
from streamObject\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info3723746273560-7461869",ExpressionUUID->"6bc24c2d-875d-41be-9327-\
355832904abe"],

Cell[BoxData["\<\"lazyConstantArray[elem] produces an infinite list of copies \
of elem\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info3733746273560-7461869",ExpressionUUID->"e309c232-9533-4f61-9884-\
3c2bc101d045"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", 
  "$lazyIterationLimit"}], "\[IndentingNewLine]", "$lazyIterationLimit"}], \
"Input",
 CellLabel->
  "In[307]:=",ExpressionUUID->"d8833260-c2e5-4791-808b-7f6f92e54cfe"],

Cell[BoxData["\<\"Iteration limit used for finding successive elements in a \
lazy list\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info3073746271290-7461869",ExpressionUUID->"f0647696-0f34-4adb-a95a-\
c04d142e0a45"],

Cell[BoxData["\[Infinity]"], "Output",
 CellLabel->"Out[308]=",ExpressionUUID->"91631990-e7f8-482e-823e-6dcb334f40b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using lazy lists", \
"Section",ExpressionUUID->"79b459a2-40b2-4d85-ad2a-91269059057f"],

Cell["\<\
Take and Part will continuously evaluate the next element of lazy list until \
the required elements have been found. \
\>", "Text",ExpressionUUID->"c60618e2-1470-4fc2-98cd-8097bfc68e7d"],

Cell[TextData[{
 StyleBox["Part",
  FontWeight->"Bold"],
 " of a lazyList returns a lazyList. You can get the element of interest with \
",
 StyleBox["First",
  FontWeight->"Bold"],
 ". You can keep extracting further elements from the returned lazyList so \
you don\[CloseCurlyQuote]t lose progress. The lazyList does not keep track of \
position for efficiency reasons. This is up to the user."
}], "Text",ExpressionUUID->"e1df6d75-65c5-48fc-8e85-a9ebc6a57896"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", "4"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", "%"}], "\[IndentingNewLine]", 
 RowBox[{"Part", "[", 
  RowBox[{"%%", ",", "2"}], "]"}]}], "Input",
 CellLabel->
  "In[374]:=",ExpressionUUID->"62f4563c-892f-4239-8057-70dc5511ffaf"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"4", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "4"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[374]=",ExpressionUUID->"f055239c-2e91-4b10-95cf-6899f3cc38b7"],

Cell[BoxData["4"], "Output",
 CellLabel->
  "Out[375]=",ExpressionUUID->"b2168194-d8af-4ad7-bfbd-d5efc927bb3e"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"5", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "5"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->"Out[376]=",ExpressionUUID->"20329064-1619-441f-8c15-a2985e30bbfb"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Take",
  FontWeight->"Bold"],
 " of lazyList returns a list. The first element is a list of the extracted \
elements. The last element is a lazyList at the point where take stopped. \
Note that there will be an overlap of 1 if you continue extracting elements \
form the returned lazyList (this is necessary to avoid unnecessary \
evaluations of elements)."
}], "Text",ExpressionUUID->"66aa0271-c1d7-444e-bd61-b1bc2b426edf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"list", ",", "rest"}], "}"}], "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"lazyRange", "[", "]"}], ",", "4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "list", "\[IndentingNewLine]", "rest", "\
\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"rest", ",", "5"}], "]"}]}], "Input",
 CellLabel->
  "In[379]:=",ExpressionUUID->"0deb31ae-48a0-4c10-b1c5-60e740712aa2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellLabel->
  "Out[380]=",ExpressionUUID->"9608ecff-54fb-4198-8176-883c8f6f3a9f"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"4", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"#0", "[", 
         RowBox[{
          RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
     ")"}], "[", 
    RowBox[{
     RowBox[{"1", "+", "4"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[381]=",ExpressionUUID->"484fde5d-44fc-4eb6-86e2-63ad267b1a22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"8", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "8"}], ",", "1"}], "]"}]}], "]"}]}], "}"}]], "Output",
 CellLabel->"Out[382]=",ExpressionUUID->"bedc00e5-5378-4c3b-a5bb-959af2c68d31"]
}, Open  ]],

Cell["\<\
TakeWhile also works with lazyLists. Note that the returned lazyList contains \
the first element that didn\[CloseCurlyQuote]t pass the test:\
\>", "Text",ExpressionUUID->"d9a560d3-261a-4f9c-bb6c-955eabdcb76c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeWhile", "[", 
  RowBox[{
   RowBox[{"lazyPowerRange", "[", 
    RowBox[{"2", ",", "2"}], "]"}], ",", 
   RowBox[{
    RowBox[{"#", "<", "100"}], "&"}]}], "]"}]], "Input",
 CellLabel->
  "In[383]:=",ExpressionUUID->"81c528c1-fbff-4d04-adb4-9a8335001936"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "8", ",", "16", ",", "32", ",", "64"}], "}"}],
    ",", 
   RowBox[{"lazyList", "[", 
    RowBox[{"128", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", " ", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"2", " ", "128"}], ",", "2"}], "]"}]}], "]"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[383]=",ExpressionUUID->"a1161b39-61a3-4e1e-9189-5aca3136724e"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Map",
  FontWeight->"Bold"],
 ", ",
 StyleBox["FoldList",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Cases",
  FontWeight->"Bold"],
 ",",
 StyleBox[" Pick",
  FontWeight->"Bold"],
 ",",
 StyleBox[" ",
  FontWeight->"Bold"],
 "and ",
 StyleBox["Select",
  FontWeight->"Bold"],
 " work with lazyLists and return lazyLists:"
}], "Text",ExpressionUUID->"2db4b7f0-d54f-42c4-8598-19597a08299a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Map", "[", 
  RowBox[{"Sqrt", ",", 
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", "2"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[384]:=",ExpressionUUID->"db26052a-0c7d-4de0-99a3-0b0a708b07d2"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"0", ",", 
   RowBox[{"Sqrt", "/@", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"lazyList", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#0", "[", 
          RowBox[{
           RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
      ")"}], "[", 
     RowBox[{
      RowBox[{"2", "+", "0"}], ",", "2"}], "]"}]}]}], "]"}]], "Output",
 CellLabel->
  "Out[384]=",ExpressionUUID->"0ba19c74-eb41-4ef2-a91b-ac388ecffe73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   SqrtBox["2"], ",", "2", ",", 
   SqrtBox["6"], ",", 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]}], "}"}]], "Output",
 CellLabel->"Out[385]=",ExpressionUUID->"722982bb-2c4c-4b01-ac6f-911e0bd300e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FoldList", "[", 
  RowBox[{"Plus", ",", "x0", ",", 
   RowBox[{"lazyRange", "[", 
    RowBox[{"n", ",", "m"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[386]:=",ExpressionUUID->"88d3c946-e148-4f02-8892-b1be9959da90"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"x0", ",", 
   RowBox[{"FoldList", "[", 
    RowBox[{"Plus", ",", 
     RowBox[{"lazyList", "[", 
      RowBox[{
       RowBox[{"x0", "+", 
        RowBox[{"First", "[", 
         RowBox[{"lazyList", "[", 
          RowBox[{"n", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"lazyList", "[", 
               RowBox[{"#1", ",", 
                RowBox[{"#0", "[", 
                 RowBox[{
                  RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], 
              "&"}], ")"}], "[", 
            RowBox[{
             RowBox[{"m", "+", "n"}], ",", "m"}], "]"}]}], "]"}], "]"}]}], 
       ",", 
       RowBox[{"Last", "[", 
        RowBox[{"lazyList", "[", 
         RowBox[{"n", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"lazyList", "[", 
              RowBox[{"#1", ",", 
               RowBox[{"#0", "[", 
                RowBox[{
                 RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], 
             "&"}], ")"}], "[", 
           RowBox[{
            RowBox[{"m", "+", "n"}], ",", "m"}], "]"}]}], "]"}], "]"}]}], 
      "]"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[386]=",ExpressionUUID->"c155fae1-d745-48f9-8b55-75ab041c96cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x0", ",", 
   RowBox[{"n", "+", "x0"}], ",", 
   RowBox[{"m", "+", 
    RowBox[{"2", " ", "n"}], "+", "x0"}], ",", 
   RowBox[{
    RowBox[{"3", " ", "m"}], "+", 
    RowBox[{"3", " ", "n"}], "+", "x0"}], ",", 
   RowBox[{
    RowBox[{"6", " ", "m"}], "+", 
    RowBox[{"4", " ", "n"}], "+", "x0"}]}], "}"}]], "Output",
 CellLabel->"Out[387]=",ExpressionUUID->"2f51ddd4-6519-4be3-ae8e-1d4fef208475"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", "/", "3"}]}], "]"}], ",", "_Integer"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[388]:=",ExpressionUUID->"b0b0dea7-1808-4672-a86a-d9ce4333d960"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"0", ",", 
   RowBox[{"lazyLists`Private`case$63850", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"lazyList", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"#0", "[", 
          RowBox[{
           RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
      ")"}], "[", 
     RowBox[{
      RowBox[{
       FractionBox["2", "3"], "+", "0"}], ",", 
      FractionBox["2", "3"]}], "]"}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[388]=",ExpressionUUID->"6443b64d-a31c-4527-b30b-496aca7af0f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "2", ",", "4", ",", "6", ",", "8"}], "}"}]], "Output",
 CellLabel->"Out[389]=",ExpressionUUID->"b4095c88-dc55-4584-a842-2ae609b1ae6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Pick", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", "2"}], "]"}], ",", 
   RowBox[{"lazyRange", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", "/", "3"}]}], "]"}], ",", "_Integer"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[390]:=",ExpressionUUID->"02767e8a-5bbd-4578-a783-6b1ca449f3b0"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"0", ",", 
   RowBox[{"lazyLists`Private`pick$63854", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"2", "+", "0"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{
        FractionBox["2", "3"], "+", "0"}], ",", 
       FractionBox["2", "3"]}], "]"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[390]=",ExpressionUUID->"78733272-50d3-4dd5-904f-8a5be9b03b5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "6", ",", "12", ",", "18", ",", "24"}], "}"}]], "Output",
 CellLabel->"Out[391]=",ExpressionUUID->"92a70d58-a163-485e-b050-54442bef9abf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"lazyRange", "[", "]"}], ",", "OddQ"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"%", ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[392]:=",ExpressionUUID->"f7cc65d1-b623-4858-860e-fb8bda6906cf"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"lazyList", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"#0", "[", 
           RowBox[{
            RowBox[{"#2", "+", "#1"}], ",", "#2"}], "]"}]}], "]"}], "&"}], 
       ")"}], "[", 
      RowBox[{
       RowBox[{"1", "+", "1"}], ",", "1"}], "]"}], ",", "OddQ"}], "]"}]}], 
  "]"}]], "Output",
 CellLabel->
  "Out[392]=",ExpressionUUID->"c25c64fb-6fd0-4fab-ba17-08ecc12a7af0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}], "}"}]], "Output",
 CellLabel->"Out[393]=",ExpressionUUID->"ccaa35fb-e54d-4895-ab93-827c64ff8a71"]
}, Open  ]],

Cell["lazyLists can be used with InputStreams. First make a file:", \
"Text",ExpressionUUID->"f082c183-c495-4435-9420-7573f759251c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stmp", "=", 
   RowBox[{"OpenWrite", "[", "\"\<tmp\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "a", ",", "b", ",", "c"}], "]"}], "\n", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "x"}], "]"}], "\n", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "\"\<Hello\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "\"\<Hello\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Write", "[", 
  RowBox[{"stmp", ",", "\"\<Hello\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "stmp", "]"}]}], "Input",
 CellLabel->"In[406]:=",
 CellID->28621,ExpressionUUID->"56e7c7ce-37ef-4877-9931-7dd9f3a12e91"],

Cell[BoxData["\<\"tmp\"\>"], "Output",
 CellLabel->"Out[412]=",ExpressionUUID->"50cffa7e-e1ce-4944-bd40-3a11a9a48c63"]
}, Open  ]],

Cell["Open a reading stream and make a lazyList out of it:", \
"Text",ExpressionUUID->"a3290700-5172-4544-bd8e-a4ce7202ecbb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stream", "=", 
   RowBox[{"OpenRead", "[", "\"\<tmp\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"streamList", " ", "=", " ", 
  RowBox[{"lazyStream", "[", "stream", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"TakeWhile", "[", 
   RowBox[{"streamList", ",", 
    RowBox[{
     RowBox[{"#", "=!=", "EndOfFile"}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Close", "[", "stream", "]"}]}], "Input",
 CellLabel->
  "In[413]:=",ExpressionUUID->"397a2c85-f736-4613-8c9b-d8a642960c89"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"abc", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{
        RowBox[{"Read", "[", "#1", "]"}], ",", 
        RowBox[{"#0", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"1", "+", "#2"}]}], "]"}]}], "]"}], "&"}], ")"}], "[", 
    RowBox[{
     InterpretationBox[
      RowBox[{
       TagBox["InputStream",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Thickness[0.0016806722689075631`], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, 
                   FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], StripOnInput -> False], 
                  StyleBox[{
                    
                    JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}, CurveClosed -> {1}]}, 
                   JoinForm[{"Miter", 10.}], 
                   RGBColor[0.699951, 0.699951, 0.699951, 1.], StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                    22.478099999999998`, 1.0035199999999997`}, {
                    23.478899999999996`, 1.0035199999999997`}, {
                    24.321099999999998`, 1.0035199999999997`}, {
                    25.003899999999998`, 1.6863299999999997`}, {
                    25.003899999999998`, 2.5285199999999994`}, {
                    25.003899999999998`, 23.474999999999998`}, {
                    25.003899999999998`, 24.317199999999996`}, {
                    24.321099999999998`, 24.999999999999996`}, {
                    23.478899999999996`, 24.999999999999996`}, {
                    22.478099999999998`, 24.999999999999996`}, {
                    22.478099999999998`, 24.999999999999993`}, {20.4805, 
                    22.421099999999996`}, {20.4805, 13.0039}, {20.4805, 
                    3.5867199999999992`}, {22.478099999999998`, 
                    1.0035199999999997`}, {22.478099999999998`, 
                    1.0035199999999997`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.50586, 12.9016}, {
                    8.26328, 16.8398}, {8.26328, 14.856599999999998`}, {
                    6.0230500000000005`, 12.947299999999997`}, {8.26328, 
                    10.946100000000001`}, {8.26328, 8.96289}, {3.50586, 
                    12.9016}}}]}, 
                   FaceForm[
                    RGBColor[0.5, 0.5, 0.5, 1.]], StripOnInput -> False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{16.801199999999998`, 12.8969}, {
                    16.801199999999998`, 12.335499999999998`}, {
                    17.256200000000003`, 11.880899999999999`}, {
                    17.817599999999995`, 11.880899999999999`}, {
                    18.378899999999998`, 11.880899999999999`}, {18.834, 
                    12.335499999999998`}, {18.834, 12.8969}, {18.834, 
                    13.458200000000003`}, {18.378899999999998`, 13.9133}, {
                    17.817599999999995`, 13.9133}, {17.256200000000003`, 
                    13.9133}, {16.801199999999998`, 13.458200000000003`}, {
                    16.801199999999998`, 12.8969}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13.3812, 12.8969}, {13.3812, 
                    12.335499999999998`}, {13.836300000000001`, 
                    11.880899999999999`}, {14.397699999999999`, 
                    11.880899999999999`}, {14.958999999999998`, 
                    11.880899999999999`}, {15.413699999999999`, 
                    12.335499999999998`}, {15.413699999999999`, 12.8969}, {
                    15.413699999999999`, 13.458200000000003`}, {
                    14.958999999999998`, 13.9133}, {14.397699999999999`, 
                    13.9133}, {13.836300000000001`, 13.9133}, {13.3812, 
                    13.458200000000003`}, {13.3812, 12.8969}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{9.961329999999998, 12.8969}, {9.961329999999998, 
                    12.335499999999998`}, {10.4164, 11.880899999999999`}, {
                    10.977699999999999`, 11.880899999999999`}, {
                    11.538699999999999`, 11.880899999999999`}, {11.9938, 
                    12.335499999999998`}, {11.9938, 12.8969}, {11.9938, 
                    13.458200000000003`}, {11.538699999999999`, 13.9133}, {
                    10.977699999999999`, 13.9133}, {10.4164, 13.9133}, {
                    9.961329999999998, 13.458200000000003`}, {
                    9.961329999999998, 12.8969}}}]}, 
                   FaceForm[
                    RGBColor[
                    0.46093800000000007`, 0.46093800000000007`, 
                    0.46093800000000007`, 1.]], StripOnInput -> False]}, 
                 Background -> GrayLevel[0.5], Axes -> False, AspectRatio -> 
                 1, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, Frame -> True, FrameTicks -> None, 
                 FrameStyle -> Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    "\"tmp\"", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Unique ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{
                  Thickness[0.0016806722689075631`], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, 
                   FaceForm[{
                    GrayLevel[0.93], 
                    Opacity[1.]}], StripOnInput -> False], 
                  StyleBox[{
                    
                    JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}, CurveClosed -> {1}]}, 
                   JoinForm[{"Miter", 10.}], 
                   RGBColor[0.699951, 0.699951, 0.699951, 1.], StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                    22.478099999999998`, 1.0035199999999997`}, {
                    23.478899999999996`, 1.0035199999999997`}, {
                    24.321099999999998`, 1.0035199999999997`}, {
                    25.003899999999998`, 1.6863299999999997`}, {
                    25.003899999999998`, 2.5285199999999994`}, {
                    25.003899999999998`, 23.474999999999998`}, {
                    25.003899999999998`, 24.317199999999996`}, {
                    24.321099999999998`, 24.999999999999996`}, {
                    23.478899999999996`, 24.999999999999996`}, {
                    22.478099999999998`, 24.999999999999996`}, {
                    22.478099999999998`, 24.999999999999993`}, {20.4805, 
                    22.421099999999996`}, {20.4805, 13.0039}, {20.4805, 
                    3.5867199999999992`}, {22.478099999999998`, 
                    1.0035199999999997`}, {22.478099999999998`, 
                    1.0035199999999997`}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.50586, 12.9016}, {
                    8.26328, 16.8398}, {8.26328, 14.856599999999998`}, {
                    6.0230500000000005`, 12.947299999999997`}, {8.26328, 
                    10.946100000000001`}, {8.26328, 8.96289}, {3.50586, 
                    12.9016}}}]}, 
                   FaceForm[
                    RGBColor[0.5, 0.5, 0.5, 1.]], StripOnInput -> False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{16.801199999999998`, 12.8969}, {
                    16.801199999999998`, 12.335499999999998`}, {
                    17.256200000000003`, 11.880899999999999`}, {
                    17.817599999999995`, 11.880899999999999`}, {
                    18.378899999999998`, 11.880899999999999`}, {18.834, 
                    12.335499999999998`}, {18.834, 12.8969}, {18.834, 
                    13.458200000000003`}, {18.378899999999998`, 13.9133}, {
                    17.817599999999995`, 13.9133}, {17.256200000000003`, 
                    13.9133}, {16.801199999999998`, 13.458200000000003`}, {
                    16.801199999999998`, 12.8969}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{13.3812, 12.8969}, {13.3812, 
                    12.335499999999998`}, {13.836300000000001`, 
                    11.880899999999999`}, {14.397699999999999`, 
                    11.880899999999999`}, {14.958999999999998`, 
                    11.880899999999999`}, {15.413699999999999`, 
                    12.335499999999998`}, {15.413699999999999`, 12.8969}, {
                    15.413699999999999`, 13.458200000000003`}, {
                    14.958999999999998`, 13.9133}, {14.397699999999999`, 
                    13.9133}, {13.836300000000001`, 13.9133}, {13.3812, 
                    13.458200000000003`}, {13.3812, 12.8969}}}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{9.961329999999998, 12.8969}, {9.961329999999998, 
                    12.335499999999998`}, {10.4164, 11.880899999999999`}, {
                    10.977699999999999`, 11.880899999999999`}, {
                    11.538699999999999`, 11.880899999999999`}, {11.9938, 
                    12.335499999999998`}, {11.9938, 12.8969}, {11.9938, 
                    13.458200000000003`}, {11.538699999999999`, 13.9133}, {
                    10.977699999999999`, 13.9133}, {10.4164, 13.9133}, {
                    9.961329999999998, 13.458200000000003`}, {
                    9.961329999999998, 12.8969}}}]}, 
                   FaceForm[
                    RGBColor[
                    0.46093800000000007`, 0.46093800000000007`, 
                    0.46093800000000007`, 1.]], StripOnInput -> False]}, 
                 Background -> GrayLevel[0.5], Axes -> False, AspectRatio -> 
                 1, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, Frame -> True, FrameTicks -> None, 
                 FrameStyle -> Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    "\"tmp\"", ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Unique ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Binary: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Open: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[Options[
                    InputStream["tmp", 3]] =!= {}, StandardForm], 
                    UpdateInterval -> 1], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InputStream["tmp", 3],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     RowBox[{"1", "+", "1"}]}], "]"}]}], "]"}]], "Output",
 CellLabel->
  "Out[414]=",ExpressionUUID->"9041370c-b294-4c89-bf1e-eed67ea900cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "abc", ",", "x", ",", "\<\"Hello\"\>", ",", "\<\"Hello\"\>", 
   ",", "\<\"Hello\"\>"}], "}"}]], "Output",
 CellLabel->
  "Out[415]=",ExpressionUUID->"4702a778-1165-4a19-8cf1-bdf51eb01900"],

Cell[BoxData["\<\"tmp\"\>"], "Output",
 CellLabel->"Out[416]=",ExpressionUUID->"10202383-484d-4b5d-8ede-d5788454fe0d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Plus",
  FontWeight->"Bold"],
 ", ",
 StyleBox["Times",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Power",
  FontWeight->"Bold"],
 " thread over lazyLists, though these functionalities are far less efficient \
than for ordinary lists and should probably be avoided if the same can be \
achieved with FoldList or Map"
}], "Text",ExpressionUUID->"d3f5e510-6511-42f7-bf7f-18d13a7c0060"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"lazyRange", "[", "]"}], "+", 
     RowBox[{"lazyRange", "[", "2", "]"}]}], ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "*", " ", 
      RowBox[{"lazyRange", "[", "]"}]}], "+", 
     RowBox[{"3", " ", 
      RowBox[{"lazyRange", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}]}], ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", " ", "@", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"lazyRange", "[", "]"}], "^", 
     RowBox[{"lazyRange", "[", "]"}]}], ",", "5"}], "]"}]}]}], "Input",
 CellLabel->
  "In[417]:=",ExpressionUUID->"431c46dd-1989-4038-a8a6-287ac92d6e53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", "7", ",", "9", ",", "11"}], "}"}]], "Output",
 CellLabel->
  "Out[417]=",ExpressionUUID->"99e8dcd3-6154-4c59-a82a-ab47f4a28d37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "13", ",", "21", ",", "29", ",", "37"}], "}"}]], "Output",
 CellLabel->
  "Out[418]=",ExpressionUUID->"6720ce75-243a-42dd-8f02-aa781309897f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "27", ",", "256", ",", "3125"}], 
  "}"}]], "Output",
 CellLabel->"Out[419]=",ExpressionUUID->"e3b7c4e2-62fb-4137-9bf5-0598f1f0b316"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Caveats", \
"Subsubsection",ExpressionUUID->"913456ae-86bc-474d-90bb-1fe719afec8e"],

Cell["\<\
When defining your own lazyLists, make sure the last part of the list does \
not evaluate to itself. Take etc. will not work correctly on such lists and \
stop iterating prematurely:\
\>", "Text",ExpressionUUID->"232911ec-716c-44a2-a324-124b95f3af23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"badExample", " ", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"lazyList", "[", 
     RowBox[{"1", ",", 
      RowBox[{"#0", "[", "]"}]}], "]"}], "]"}], "[", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"badExample", "===", 
  RowBox[{"Last", "[", "badExample", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"First", " ", "@", 
  RowBox[{"Take", "[", 
   RowBox[{"badExample", ",", "20"}], "]"}]}]}], "Input",
 CellLabel->
  "In[420]:=",ExpressionUUID->"16b8e012-7427-4406-b801-d4e7e34f299e"],

Cell[BoxData[
 RowBox[{"lazyList", "[", 
  RowBox[{"1", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lazyList", "[", 
       RowBox[{"1", ",", 
        RowBox[{"#0", "[", "]"}]}], "]"}], "&"}], ")"}], "[", "]"}]}], 
  "]"}]], "Output",
 CellLabel->
  "Out[420]=",ExpressionUUID->"3a0ed941-3c11-42f9-ad67-e37ea81ae43c"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[421]=",ExpressionUUID->"e23b1eac-3674-47c2-9b1b-cfc23c32c10e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[422]=",ExpressionUUID->"3baad4e6-ca88-4b73-8dab-61324d62cb36"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{983, 839},
WindowMargins->{{Automatic, 356}, {51, Automatic}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowGroupOpener->True,
TrackCellChangeTimes->False,
Magnification:>1.3 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]

